function solution(n, a, b) {
  let count = 1;
  while (Math.abs(a - b) !== 1 || Math.max(a, b) % 2 !== 0) {
    if (a % 2 === 0) {
      a = a / 2;
    } else {
      a = (a + 1) / 2;
    }

    if (b % 2 === 0) {
      b = b / 2;
    } else {
      b = (b + 1) / 2;
    }
    count++;
  }
  return count;
}

// 예상대진표

// 입출력 예
// N	A	B	answer
// 8	4	7	3

// 입출력 예 설명
// 첫 번째 라운드에서 4번 참가자는 3번 참가자와 붙게 되고, 7번 참가자는 8번 참가자와 붙게 됩니다.
// 항상 이긴다고 가정했으므로 4번 참가자는 다음 라운드에서 2번이 되고, 7번 참가자는 4번이 됩니다.
// 두 번째 라운드에서 2번은 1번과 붙게 되고, 4번은 3번과 붙게 됩니다.
// 항상 이긴다고 가정했으므로 2번은 다음 라운드에서 1번이 되고, 4번은 2번이 됩니다.
// 세 번째 라운드에서 1번과 2번으로 두 참가자가 붙게 되므로 3을 return 하면 됩니다.

// 주어진 N의 값은 신경쓰지 않고 A와 B 사이의 거리에 집중했다. 토너먼트를 한단계씩 올라갈때마다 A와 B의 위치를 다시 지정해주고
// 사이의 거리가 1이 될때 count를 반환했다. 이때 예외가 있는데 A와B가 한조는 아니지만 거리가 1일때가 있어서 예외처리 해줬다.
