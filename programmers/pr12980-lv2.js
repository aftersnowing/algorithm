function solution(n) {
  let battery = [];
  let r = null;
  while (n > 1) {
    r = n % 2;
    n = Math.floor(n / 2);
    battery.push(r);
  }
  battery.push(n);
  return battery.filter(val => val === 1).length;
}

// - 점프와 순간 이동

// - 입출력 예
// N	result
// 5	  2
// 6  	2
// 5000	5

// - 입출력 예 설명

// 입출력 예 #1
// 위의 예시와 같습니다.

// 입출력 예 #2
// 처음 위치 0 에서 1 칸을 앞으로 점프한 다음 순간이동 하면 (현재까지 온 거리 : 1) x 2에 해당하는 위치로 이동할 수 있으므로 위치 2로 이동합니다.
// 이때 1 칸을 앞으로 점프하면 위치3으로 이동합니다. 이때 다시 순간이동 하면 (현재까지 온 거리 : 3) x 2 이동할 수 있으므로 위치 6에 도착합니다.
// 이 경우가 건전지 사용량이 가장 적으므로 2를 반환해주면 됩니다.

// 입출력 예 #3
// 위와 같은 방식으로 합니다.

// 나의 사고
// 문제를 처음보고는 무슨 말이야? 하고 생각했다. 그러다가 천천히 생각해보니 2진법과 연관이 있겠다는 생각이 들었다. 결국 문제에서 원하는 것은
// 입력으로 주어진 숫자를 2진법으로 변환했을때 1의 숫자 갯수였다.
